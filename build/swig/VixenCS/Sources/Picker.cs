/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace Vixen {

using System;
using System.Runtime.InteropServices;

public class Picker : MouseEngine {
  private HandleRef swigCPtr;

  internal Picker(IntPtr cPtr, bool cMemoryOwn) : base(VixenLibPINVOKE.Picker_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(Picker obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~Picker() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          VixenLibPINVOKE.delete_Picker(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public Picker() : this(VixenLibPINVOKE.new_Picker(), true) {
  }

  public float GetNearDist() {
    float ret = VixenLibPINVOKE.Picker_GetNearDist(swigCPtr);
    return ret;
  }

  public ObjArray GetSelected() 
	{
		IntPtr cPtr = VixenLibPINVOKE.Picker_GetSelected(swigCPtr);
		return (ObjArray)  SharedObj.MakeObject(cPtr, true);
	}


  public Model GetNearest() 
	{
		IntPtr cPtr = VixenLibPINVOKE.Picker_GetNearest(swigCPtr);
		return (Model)  SharedObj.MakeObject(cPtr, true);
	}


  public uint GetOptions() {
    uint ret = VixenLibPINVOKE.Picker_GetOptions(swigCPtr);
    return ret;
  }

  public uint GetButtons() {
    uint ret = VixenLibPINVOKE.Picker_GetButtons(swigCPtr);
    return ret;
  }

  public Appearance GetHilite() 
	{
		IntPtr cPtr = VixenLibPINVOKE.Picker_GetHilite(swigCPtr);
		return (Appearance)  SharedObj.MakeObject(cPtr, true);
	}


  public void SetOptions(int opts) {
    VixenLibPINVOKE.Picker_SetOptions(swigCPtr, opts);
  }

  public void SetButtons(int mbutton) {
    VixenLibPINVOKE.Picker_SetButtons(swigCPtr, mbutton);
  }

  public void SetHilite(Appearance hilite) {
    VixenLibPINVOKE.Picker_SetHilite(swigCPtr, Appearance.getCPtr(hilite));
  }

  public void UnHiliteAll(bool didpick) {
    VixenLibPINVOKE.Picker_UnHiliteAll__SWIG_0(swigCPtr, didpick);
  }

  public void UnHiliteAll() {
    VixenLibPINVOKE.Picker_UnHiliteAll__SWIG_1(swigCPtr);
  }

  public bool DoHilite {
    set {
      VixenLibPINVOKE.Picker_DoHilite_set(swigCPtr, value);
    } 
    get {
      bool ret = VixenLibPINVOKE.Picker_DoHilite_get(swigCPtr);
      return ret;
    } 
  }

  public bool DoPick {
    set {
      VixenLibPINVOKE.Picker_DoPick_set(swigCPtr, value);
    } 
    get {
      bool ret = VixenLibPINVOKE.Picker_DoPick_get(swigCPtr);
      return ret;
    } 
  }

  public ObjArray Selected {
    set {
      VixenLibPINVOKE.Picker_Selected_set(swigCPtr, ObjArray.getCPtr(value));
    } 
	get
	{
		IntPtr cPtr = VixenLibPINVOKE.Picker_Selected_get(swigCPtr);
		return (ObjArray) SharedObj.MakeObject(cPtr, false);
	}

  }

  public Model Nearest {
    set {
      VixenLibPINVOKE.Picker_Nearest_set(swigCPtr, Model.getCPtr(value));
    } 
	get
	{
		IntPtr cPtr = VixenLibPINVOKE.Picker_Nearest_get(swigCPtr);
		return (Model) SharedObj.MakeObject(cPtr, false);
	}

  }

  public float NearDist {
    set {
      VixenLibPINVOKE.Picker_NearDist_set(swigCPtr, value);
    } 
    get {
      float ret = VixenLibPINVOKE.Picker_NearDist_get(swigCPtr);
      return ret;
    } 
  }

  public int Buttons {
    set {
      VixenLibPINVOKE.Picker_Buttons_set(swigCPtr, value);
    } 
    get {
      int ret = VixenLibPINVOKE.Picker_Buttons_get(swigCPtr);
      return ret;
    } 
  }

  public int Options {
    set {
      VixenLibPINVOKE.Picker_Options_set(swigCPtr, value);
    } 
    get {
      int ret = VixenLibPINVOKE.Picker_Options_get(swigCPtr);
      return ret;
    } 
  }

  public Appearance Hilite {
    set {
      VixenLibPINVOKE.Picker_Hilite_set(swigCPtr, Appearance.getCPtr(value));
    } 
	get
	{
		IntPtr cPtr = VixenLibPINVOKE.Picker_Hilite_get(swigCPtr);
		return (Appearance) SharedObj.MakeObject(cPtr, false);
	}

  }

  public static readonly int BOUNDS = VixenLibPINVOKE.Picker_BOUNDS_get();
  public static readonly int MESH = VixenLibPINVOKE.Picker_MESH_get();
  public static readonly int PICK_MODEL = VixenLibPINVOKE.Picker_PICK_MODEL_get();
  public static readonly int SELECT_PARENT = VixenLibPINVOKE.Picker_SELECT_PARENT_get();
  public static readonly int HILITE_SELECTED = VixenLibPINVOKE.Picker_HILITE_SELECTED_get();
  public static readonly int HILITE_PICKED = VixenLibPINVOKE.Picker_HILITE_PICKED_get();
  public static readonly int NAME_FILTER = VixenLibPINVOKE.Picker_NAME_FILTER_get();
  public static readonly int MULTI_SELECT = VixenLibPINVOKE.Picker_MULTI_SELECT_get();
  public static readonly int CHECK_PARENT_BOUND = VixenLibPINVOKE.Picker_CHECK_PARENT_BOUND_get();

}

}
