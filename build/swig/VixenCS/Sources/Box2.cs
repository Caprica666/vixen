/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace Vixen {

using System;
using System.Runtime.InteropServices;

public class Box2 : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal Box2(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(Box2 obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~Box2() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          VixenLibPINVOKE.delete_Box2(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public Vec2 min {
    set {
      VixenLibPINVOKE.Box2_min_set(swigCPtr, Vec2.getCPtr(value));
      if (VixenLibPINVOKE.SWIGPendingException.Pending) throw VixenLibPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      Vec2 ret = new Vec2(VixenLibPINVOKE.Box2_min_get(swigCPtr), false);
      if (VixenLibPINVOKE.SWIGPendingException.Pending) throw VixenLibPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public Vec2 max {
    set {
      VixenLibPINVOKE.Box2_max_set(swigCPtr, Vec2.getCPtr(value));
      if (VixenLibPINVOKE.SWIGPendingException.Pending) throw VixenLibPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      Vec2 ret = new Vec2(VixenLibPINVOKE.Box2_max_get(swigCPtr), false);
      if (VixenLibPINVOKE.SWIGPendingException.Pending) throw VixenLibPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public Box2() : this(VixenLibPINVOKE.new_Box2__SWIG_0(), true) {
  }

  public Box2(float xmin, float xmax, float ymin, float ymax) : this(VixenLibPINVOKE.new_Box2__SWIG_1(xmin, xmax, ymin, ymax), true) {
  }

  public bool Contains(Vec2 arg0) {
    bool ret = VixenLibPINVOKE.Box2_Contains(swigCPtr, Vec2.getCPtr(arg0));
    if (VixenLibPINVOKE.SWIGPendingException.Pending) throw VixenLibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void Set(float xmin, float xmax, float ymin, float ymax) {
    VixenLibPINVOKE.Box2_Set(swigCPtr, xmin, xmax, ymin, ymax);
  }

  public float Height {
    set {
      VixenLibPINVOKE.Box2_Height_set(swigCPtr, value);
    } 
    get {
      float ret = VixenLibPINVOKE.Box2_Height_get(swigCPtr);
      return ret;
    } 
  }

  public float Width {
    set {
      VixenLibPINVOKE.Box2_Width_set(swigCPtr, value);
    } 
    get {
      float ret = VixenLibPINVOKE.Box2_Width_get(swigCPtr);
      return ret;
    } 
  }

  public Vec2 Center {
    set {
      VixenLibPINVOKE.Box2_Center_set(swigCPtr, Vec2.getCPtr(value));
      if (VixenLibPINVOKE.SWIGPendingException.Pending) throw VixenLibPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      Vec2 ret = new Vec2(VixenLibPINVOKE.Box2_Center_get(swigCPtr), false);
      if (VixenLibPINVOKE.SWIGPendingException.Pending) throw VixenLibPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

}

}
