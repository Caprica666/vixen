/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace Vixen {

using System;
using System.Runtime.InteropServices;

public class Transformer : Engine {
  private HandleRef swigCPtr;

  internal Transformer(IntPtr cPtr, bool cMemoryOwn) : base(VixenLibPINVOKE.Transformer_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(Transformer obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~Transformer() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          VixenLibPINVOKE.delete_Transformer(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public Transformer() : this(VixenLibPINVOKE.new_Transformer__SWIG_0(), true) {
  }

  public Transformer(Matrix trans) : this(VixenLibPINVOKE.new_Transformer__SWIG_1(Matrix.getCPtr(trans)), true) {
  }

  public Matrix GetTotalTransform() {
    IntPtr cPtr = VixenLibPINVOKE.Transformer_GetTotalTransform(swigCPtr);
    Matrix ret = (cPtr == IntPtr.Zero) ? null : new Matrix(cPtr, false);
    return ret;
  }

  public void SetOptions(int opts) {
    VixenLibPINVOKE.Transformer_SetOptions(swigCPtr, opts);
  }

  public int GetOptions() {
    int ret = VixenLibPINVOKE.Transformer_GetOptions(swigCPtr);
    return ret;
  }

  public void SetLocalPosition(Vec3 arg0) {
    VixenLibPINVOKE.Transformer_SetLocalPosition(swigCPtr, Vec3.getCPtr(arg0));
    if (VixenLibPINVOKE.SWIGPendingException.Pending) throw VixenLibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void Reset() {
    VixenLibPINVOKE.Transformer_Reset(swigCPtr);
  }

  public Matrix CalcMatrix() {
    IntPtr cPtr = VixenLibPINVOKE.Transformer_CalcMatrix(swigCPtr);
    Matrix ret = (cPtr == IntPtr.Zero) ? null : new Matrix(cPtr, false);
    return ret;
  }

  public Vec3 Position {
    set {
      VixenLibPINVOKE.Transformer_Position_set(swigCPtr, Vec3.getCPtr(value));
      if (VixenLibPINVOKE.SWIGPendingException.Pending) throw VixenLibPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      Vec3 ret = new Vec3(VixenLibPINVOKE.Transformer_Position_get(swigCPtr), false);
      if (VixenLibPINVOKE.SWIGPendingException.Pending) throw VixenLibPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public Vec3 Scale {
    set {
      VixenLibPINVOKE.Transformer_Scale_set(swigCPtr, Vec3.getCPtr(value));
      if (VixenLibPINVOKE.SWIGPendingException.Pending) throw VixenLibPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      Vec3 ret = new Vec3(VixenLibPINVOKE.Transformer_Scale_get(swigCPtr), false);
      if (VixenLibPINVOKE.SWIGPendingException.Pending) throw VixenLibPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public Quat Rotation {
    set {
      VixenLibPINVOKE.Transformer_Rotation_set(swigCPtr, Quat.getCPtr(value));
      if (VixenLibPINVOKE.SWIGPendingException.Pending) throw VixenLibPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      Quat ret = new Quat(VixenLibPINVOKE.Transformer_Rotation_get(swigCPtr), false);
      if (VixenLibPINVOKE.SWIGPendingException.Pending) throw VixenLibPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public Quat LookRotation {
    set {
      VixenLibPINVOKE.Transformer_LookRotation_set(swigCPtr, Quat.getCPtr(value));
      if (VixenLibPINVOKE.SWIGPendingException.Pending) throw VixenLibPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      Quat ret = new Quat(VixenLibPINVOKE.Transformer_LookRotation_get(swigCPtr), false);
      if (VixenLibPINVOKE.SWIGPendingException.Pending) throw VixenLibPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public Matrix Transform {
    set {
      VixenLibPINVOKE.Transformer_Transform_set(swigCPtr, Matrix.getCPtr(value));
    } 
    get {
      IntPtr cPtr = VixenLibPINVOKE.Transformer_Transform_get(swigCPtr);
      Matrix ret = (cPtr == IntPtr.Zero) ? null : new Matrix(cPtr, false);
      return ret;
    } 
  }

  public int BoneIndex {
    set {
      VixenLibPINVOKE.Transformer_BoneIndex_set(swigCPtr, value);
    } 
    get {
      int ret = VixenLibPINVOKE.Transformer_BoneIndex_get(swigCPtr);
      return ret;
    } 
  }

  public static readonly int LOCAL = VixenLibPINVOKE.Transformer_LOCAL_get();
  public static readonly int WORLD = VixenLibPINVOKE.Transformer_WORLD_get();

}

}
