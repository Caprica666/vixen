/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace Vixen {

using System;
using System.Runtime.InteropServices;

public class Evaluator : Engine {
  private HandleRef swigCPtr;

  internal Evaluator(IntPtr cPtr, bool cMemoryOwn) : base(VixenLibPINVOKE.Evaluator_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(Evaluator obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~Evaluator() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          VixenLibPINVOKE.delete_Evaluator(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public Evaluator() : this(VixenLibPINVOKE.new_Evaluator(), true) {
  }

  public virtual void ClearDest() {
    VixenLibPINVOKE.Evaluator_ClearDest(swigCPtr);
  }

  public int DestType {
    set {
      VixenLibPINVOKE.Evaluator_DestType_set(swigCPtr, value);
    } 
    get {
      int ret = VixenLibPINVOKE.Evaluator_DestType_get(swigCPtr);
      return ret;
    } 
  }

  public int ValSize {
    set {
      VixenLibPINVOKE.Evaluator_ValSize_set(swigCPtr, value);
    } 
    get {
      int ret = VixenLibPINVOKE.Evaluator_ValSize_get(swigCPtr);
      return ret;
    } 
  }

  public float Alpha {
    set {
      VixenLibPINVOKE.Evaluator_Alpha_set(swigCPtr, value);
    } 
    get {
      float ret = VixenLibPINVOKE.Evaluator_Alpha_get(swigCPtr);
      return ret;
    } 
  }

  public static readonly int UNKNOWN = VixenLibPINVOKE.Evaluator_UNKNOWN_get();
  public static readonly int POSITION = VixenLibPINVOKE.Evaluator_POSITION_get();
  public static readonly int ROTATION = VixenLibPINVOKE.Evaluator_ROTATION_get();
  public static readonly int SCALE = VixenLibPINVOKE.Evaluator_SCALE_get();
  public static readonly int LOOK_ROTATION = VixenLibPINVOKE.Evaluator_LOOK_ROTATION_get();
  public static readonly int LOCAL_POSITION = VixenLibPINVOKE.Evaluator_LOCAL_POSITION_get();
  public static readonly int ALPHA = VixenLibPINVOKE.Evaluator_ALPHA_get();
  public static readonly int XPOS = VixenLibPINVOKE.Evaluator_XPOS_get();
  public static readonly int YPOS = VixenLibPINVOKE.Evaluator_YPOS_get();
  public static readonly int ZPOS = VixenLibPINVOKE.Evaluator_ZPOS_get();
  public static readonly int COLOR = VixenLibPINVOKE.Evaluator_COLOR_get();
  public static readonly int FACE = VixenLibPINVOKE.Evaluator_FACE_get();
  public static readonly int LAST_DEST_TYPE = VixenLibPINVOKE.Evaluator_LAST_DEST_TYPE_get();

  public static readonly int STEP = VixenLibPINVOKE.Evaluator_STEP_get();
  public static readonly int LINEAR = VixenLibPINVOKE.Evaluator_LINEAR_get();
  public static readonly int QSTEP = VixenLibPINVOKE.Evaluator_QSTEP_get();
  public static readonly int SLERP = VixenLibPINVOKE.Evaluator_SLERP_get();
  public static readonly int MAX_KEY_SIZE = VixenLibPINVOKE.Evaluator_MAX_KEY_SIZE_get();

}

}
