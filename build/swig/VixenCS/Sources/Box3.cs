/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace Vixen {

using System;
using System.Runtime.InteropServices;

public class Box3 : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal Box3(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(Box3 obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~Box3() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          VixenLibPINVOKE.delete_Box3(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public Vec3 min {
    set {
      VixenLibPINVOKE.Box3_min_set(swigCPtr, Vec3.getCPtr(value));
      if (VixenLibPINVOKE.SWIGPendingException.Pending) throw VixenLibPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      Vec3 ret = new Vec3(VixenLibPINVOKE.Box3_min_get(swigCPtr), false);
      if (VixenLibPINVOKE.SWIGPendingException.Pending) throw VixenLibPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public Vec3 max {
    set {
      VixenLibPINVOKE.Box3_max_set(swigCPtr, Vec3.getCPtr(value));
      if (VixenLibPINVOKE.SWIGPendingException.Pending) throw VixenLibPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      Vec3 ret = new Vec3(VixenLibPINVOKE.Box3_max_get(swigCPtr), false);
      if (VixenLibPINVOKE.SWIGPendingException.Pending) throw VixenLibPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public Box3() : this(VixenLibPINVOKE.new_Box3__SWIG_0(), true) {
  }

  public Box3(Box3 arg0) : this(VixenLibPINVOKE.new_Box3__SWIG_1(Box3.getCPtr(arg0)), true) {
    if (VixenLibPINVOKE.SWIGPendingException.Pending) throw VixenLibPINVOKE.SWIGPendingException.Retrieve();
  }

  public Box3(Sphere arg0) : this(VixenLibPINVOKE.new_Box3__SWIG_2(Sphere.getCPtr(arg0)), true) {
    if (VixenLibPINVOKE.SWIGPendingException.Pending) throw VixenLibPINVOKE.SWIGPendingException.Retrieve();
  }

  public Box3(Vec3 arg0, Vec3 arg1) : this(VixenLibPINVOKE.new_Box3__SWIG_3(Vec3.getCPtr(arg0), Vec3.getCPtr(arg1)), true) {
    if (VixenLibPINVOKE.SWIGPendingException.Pending) throw VixenLibPINVOKE.SWIGPendingException.Retrieve();
  }

  public Box3(float xmin, float ymin, float zmin, float xmax, float ymax, float zmax) : this(VixenLibPINVOKE.new_Box3__SWIG_4(xmin, ymin, zmin, xmax, ymax, zmax), true) {
  }

  public void Set(float xmin, float ymin, float zmin, float xmax, float ymax, float zmax) {
    VixenLibPINVOKE.Box3_Set__SWIG_0(swigCPtr, xmin, ymin, zmin, xmax, ymax, zmax);
  }

  public void Set(Vec3 arg0, Vec3 arg1) {
    VixenLibPINVOKE.Box3_Set__SWIG_1(swigCPtr, Vec3.getCPtr(arg0), Vec3.getCPtr(arg1));
    if (VixenLibPINVOKE.SWIGPendingException.Pending) throw VixenLibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void Empty() {
    VixenLibPINVOKE.Box3_Empty(swigCPtr);
  }

  public Box3 Assign(Box3 arg0) {
    Box3 ret = new Box3(VixenLibPINVOKE.Box3_Assign__SWIG_0(swigCPtr, Box3.getCPtr(arg0)), false);
    if (VixenLibPINVOKE.SWIGPendingException.Pending) throw VixenLibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public Box3 Assign(Sphere arg0) {
    Box3 ret = new Box3(VixenLibPINVOKE.Box3_Assign__SWIG_1(swigCPtr, Sphere.getCPtr(arg0)), false);
    if (VixenLibPINVOKE.SWIGPendingException.Pending) throw VixenLibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public Box3 Mul(Matrix arg0) {
    Box3 ret = new Box3(VixenLibPINVOKE.Box3_Mul(swigCPtr, Matrix.getCPtr(arg0)), false);
    if (VixenLibPINVOKE.SWIGPendingException.Pending) throw VixenLibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool Equal(Box3 arg0) {
    bool ret = VixenLibPINVOKE.Box3_Equal(swigCPtr, Box3.getCPtr(arg0));
    if (VixenLibPINVOKE.SWIGPendingException.Pending) throw VixenLibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool NotEqual(Box3 arg0) {
    bool ret = VixenLibPINVOKE.Box3_NotEqual(swigCPtr, Box3.getCPtr(arg0));
    if (VixenLibPINVOKE.SWIGPendingException.Pending) throw VixenLibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void Normalize() {
    VixenLibPINVOKE.Box3_Normalize(swigCPtr);
  }

  public bool IsEmpty() {
    bool ret = VixenLibPINVOKE.Box3_IsEmpty(swigCPtr);
    return ret;
  }

  public bool IsNull() {
    bool ret = VixenLibPINVOKE.Box3_IsNull(swigCPtr);
    return ret;
  }

  public bool Contains(Vec3 arg0) {
    bool ret = VixenLibPINVOKE.Box3_Contains(swigCPtr, Vec3.getCPtr(arg0));
    if (VixenLibPINVOKE.SWIGPendingException.Pending) throw VixenLibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void Around(Vec3 arg0, Vec3 arg1) {
    VixenLibPINVOKE.Box3_Around(swigCPtr, Vec3.getCPtr(arg0), Vec3.getCPtr(arg1));
    if (VixenLibPINVOKE.SWIGPendingException.Pending) throw VixenLibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void Extend(Box3 arg0) {
    VixenLibPINVOKE.Box3_Extend__SWIG_0(swigCPtr, Box3.getCPtr(arg0));
    if (VixenLibPINVOKE.SWIGPendingException.Pending) throw VixenLibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void Extend(Vec3 arg0) {
    VixenLibPINVOKE.Box3_Extend__SWIG_1(swigCPtr, Vec3.getCPtr(arg0));
    if (VixenLibPINVOKE.SWIGPendingException.Pending) throw VixenLibPINVOKE.SWIGPendingException.Retrieve();
  }

  public float Height {
    set {
      VixenLibPINVOKE.Box3_Height_set(swigCPtr, value);
    } 
    get {
      float ret = VixenLibPINVOKE.Box3_Height_get(swigCPtr);
      return ret;
    } 
  }

  public float Width {
    set {
      VixenLibPINVOKE.Box3_Width_set(swigCPtr, value);
    } 
    get {
      float ret = VixenLibPINVOKE.Box3_Width_get(swigCPtr);
      return ret;
    } 
  }

  public float Depth {
    set {
      VixenLibPINVOKE.Box3_Depth_set(swigCPtr, value);
    } 
    get {
      float ret = VixenLibPINVOKE.Box3_Depth_get(swigCPtr);
      return ret;
    } 
  }

  public Vec3 Center {
    set {
      VixenLibPINVOKE.Box3_Center_set(swigCPtr, Vec3.getCPtr(value));
      if (VixenLibPINVOKE.SWIGPendingException.Pending) throw VixenLibPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      Vec3 ret = new Vec3(VixenLibPINVOKE.Box3_Center_get(swigCPtr), false);
      if (VixenLibPINVOKE.SWIGPendingException.Pending) throw VixenLibPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

}

}
