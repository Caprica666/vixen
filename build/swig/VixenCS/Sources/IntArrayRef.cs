/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace Vixen {

using System;
using System.Runtime.InteropServices;

public class IntArrayRef : RefPtr {
  private HandleRef swigCPtr;

  internal IntArrayRef(IntPtr cPtr, bool cMemoryOwn) : base(VixenLibPINVOKE.IntArrayRef_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(IntArrayRef obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~IntArrayRef() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          VixenLibPINVOKE.delete_IntArrayRef(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public IntArrayRef(RefObj p) : this(VixenLibPINVOKE.new_IntArrayRef__SWIG_0(RefObj.getCPtr(p)), true) {
  }

  public IntArrayRef() : this(VixenLibPINVOKE.new_IntArrayRef__SWIG_1(), true) {
  }

  public IntArrayRef(IntArrayRef src) : this(VixenLibPINVOKE.new_IntArrayRef__SWIG_2(IntArrayRef.getCPtr(src)), true) {
    if (VixenLibPINVOKE.SWIGPendingException.Pending) throw VixenLibPINVOKE.SWIGPendingException.Retrieve();
  }

  public IntArrayRef(IntArray p) : this(VixenLibPINVOKE.new_IntArrayRef__SWIG_3(IntArray.getCPtr(p)), true) {
  }

  public new IntArray __ref__() 
	{
		IntPtr cPtr = VixenLibPINVOKE.IntArrayRef___ref__(swigCPtr);
		return (IntArray)  SharedObj.MakeObject(cPtr, true);
	}


  public IntArrayRef Assign(IntArrayRef arg0) {
    IntArrayRef ret = new IntArrayRef(VixenLibPINVOKE.IntArrayRef_Assign__SWIG_0(swigCPtr, IntArrayRef.getCPtr(arg0)), false);
    if (VixenLibPINVOKE.SWIGPendingException.Pending) throw VixenLibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public IntArrayRef Assign(IntArray arg0) {
    IntArrayRef ret = new IntArrayRef(VixenLibPINVOKE.IntArrayRef_Assign__SWIG_1(swigCPtr, IntArray.getCPtr(arg0)), false);
    return ret;
  }

  public bool Equal(IntArrayRef arg0) {
    bool ret = VixenLibPINVOKE.IntArrayRef_Equal__SWIG_0(swigCPtr, IntArrayRef.getCPtr(arg0));
    if (VixenLibPINVOKE.SWIGPendingException.Pending) throw VixenLibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool NotEqual(IntArrayRef arg0) {
    bool ret = VixenLibPINVOKE.IntArrayRef_NotEqual__SWIG_0(swigCPtr, IntArrayRef.getCPtr(arg0));
    if (VixenLibPINVOKE.SWIGPendingException.Pending) throw VixenLibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool Equal(IntArray arg0) {
    bool ret = VixenLibPINVOKE.IntArrayRef_Equal__SWIG_1(swigCPtr, IntArray.getCPtr(arg0));
    return ret;
  }

  public bool NotEqual(IntArray arg0) {
    bool ret = VixenLibPINVOKE.IntArrayRef_NotEqual__SWIG_1(swigCPtr, IntArray.getCPtr(arg0));
    return ret;
  }

  public static IntArrayRef Null {
    get {
      IntPtr cPtr = VixenLibPINVOKE.IntArrayRef_Null_get();
      IntArrayRef ret = (cPtr == IntPtr.Zero) ? null : new IntArrayRef(cPtr, false);
      return ret;
    } 
  }

}

}
