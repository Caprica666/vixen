/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace Vixen {

using System;
using System.Runtime.InteropServices;

public class NameProp : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal NameProp(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(NameProp obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~NameProp() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          VixenLibPINVOKE.delete_NameProp(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public NameProp(string name, long tag) : this(VixenLibPINVOKE.new_NameProp__SWIG_0(name, tag), true) {
  }

  public NameProp(string name) : this(VixenLibPINVOKE.new_NameProp__SWIG_1(name), true) {
  }

  public NameProp() : this(VixenLibPINVOKE.new_NameProp__SWIG_2(), true) {
  }

  public NameProp(NameProp s) : this(VixenLibPINVOKE.new_NameProp__SWIG_3(NameProp.getCPtr(s)), true) {
    if (VixenLibPINVOKE.SWIGPendingException.Pending) throw VixenLibPINVOKE.SWIGPendingException.Retrieve();
  }

  public bool IsEmpty() {
    bool ret = VixenLibPINVOKE.NameProp_IsEmpty(swigCPtr);
    return ret;
  }

}

}
