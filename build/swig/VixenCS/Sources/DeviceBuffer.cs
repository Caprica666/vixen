/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace Vixen {

using System;
using System.Runtime.InteropServices;

public class DeviceBuffer : SharedObj {
  private HandleRef swigCPtr;

  internal DeviceBuffer(IntPtr cPtr, bool cMemoryOwn) : base(VixenLibPINVOKE.DeviceBuffer_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(DeviceBuffer obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~DeviceBuffer() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          VixenLibPINVOKE.delete_DeviceBuffer(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public DeviceBuffer(string desc, uint nbytes) : this(VixenLibPINVOKE.new_DeviceBuffer__SWIG_0(desc, nbytes), true) {
  }

  public DeviceBuffer(string desc) : this(VixenLibPINVOKE.new_DeviceBuffer__SWIG_1(desc), true) {
  }

  public DeviceBuffer() : this(VixenLibPINVOKE.new_DeviceBuffer__SWIG_2(), true) {
  }

  public DeviceBuffer(DeviceBuffer src) : this(VixenLibPINVOKE.new_DeviceBuffer__SWIG_3(DeviceBuffer.getCPtr(src)), true) {
    if (VixenLibPINVOKE.SWIGPendingException.Pending) throw VixenLibPINVOKE.SWIGPendingException.Retrieve();
  }

  public string GetDescriptor() {
    string ret = VixenLibPINVOKE.DeviceBuffer_GetDescriptor(swigCPtr);
    return ret;
  }

  public SWIGTYPE_p_void GetData() {
    IntPtr cPtr = VixenLibPINVOKE.DeviceBuffer_GetData(swigCPtr);
    SWIGTYPE_p_void ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
    return ret;
  }

  public void SetData(SWIGTYPE_p_void data) {
    VixenLibPINVOKE.DeviceBuffer_SetData(swigCPtr, SWIGTYPE_p_void.getCPtr(data));
  }

  public void Reset(string desc, uint nbytes) {
    VixenLibPINVOKE.DeviceBuffer_Reset(swigCPtr, desc, nbytes);
  }

  public bool Get(string name, SWIGTYPE_p_float v) {
    bool ret = VixenLibPINVOKE.DeviceBuffer_Get__SWIG_0(swigCPtr, name, SWIGTYPE_p_float.getCPtr(v));
    if (VixenLibPINVOKE.SWIGPendingException.Pending) throw VixenLibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool Get(string name, Col4 v) {
    bool ret = VixenLibPINVOKE.DeviceBuffer_Get__SWIG_1(swigCPtr, name, Col4.getCPtr(v));
    if (VixenLibPINVOKE.SWIGPendingException.Pending) throw VixenLibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool Get(string name, Vec3 v) {
    bool ret = VixenLibPINVOKE.DeviceBuffer_Get__SWIG_2(swigCPtr, name, Vec3.getCPtr(v));
    if (VixenLibPINVOKE.SWIGPendingException.Pending) throw VixenLibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool Get(string name, Vec4 v) {
    bool ret = VixenLibPINVOKE.DeviceBuffer_Get__SWIG_3(swigCPtr, name, Vec4.getCPtr(v));
    if (VixenLibPINVOKE.SWIGPendingException.Pending) throw VixenLibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool Get(string name, Vec2 v) {
    bool ret = VixenLibPINVOKE.DeviceBuffer_Get__SWIG_4(swigCPtr, name, Vec2.getCPtr(v));
    if (VixenLibPINVOKE.SWIGPendingException.Pending) throw VixenLibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool Set(string name, float v) {
    bool ret = VixenLibPINVOKE.DeviceBuffer_Set__SWIG_0(swigCPtr, name, v);
    return ret;
  }

  public bool Set(string name, int v) {
    bool ret = VixenLibPINVOKE.DeviceBuffer_Set__SWIG_1(swigCPtr, name, v);
    return ret;
  }

  public bool Set(string name, Col4 v) {
    bool ret = VixenLibPINVOKE.DeviceBuffer_Set__SWIG_2(swigCPtr, name, Col4.getCPtr(v));
    if (VixenLibPINVOKE.SWIGPendingException.Pending) throw VixenLibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool Set(string name, Vec3 v) {
    bool ret = VixenLibPINVOKE.DeviceBuffer_Set__SWIG_3(swigCPtr, name, Vec3.getCPtr(v));
    if (VixenLibPINVOKE.SWIGPendingException.Pending) throw VixenLibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool Set(string name, Vec4 v) {
    bool ret = VixenLibPINVOKE.DeviceBuffer_Set__SWIG_4(swigCPtr, name, Vec4.getCPtr(v));
    if (VixenLibPINVOKE.SWIGPendingException.Pending) throw VixenLibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool Set(string name, Vec2 v) {
    bool ret = VixenLibPINVOKE.DeviceBuffer_Set__SWIG_5(swigCPtr, name, Vec2.getCPtr(v));
    if (VixenLibPINVOKE.SWIGPendingException.Pending) throw VixenLibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool Get(string name, SWIGTYPE_p_int dst) {
    bool ret = VixenLibPINVOKE.DeviceBuffer_Get__SWIG_5(swigCPtr, name, SWIGTYPE_p_int.getCPtr(dst));
    return ret;
  }

  public bool Set(string name, SWIGTYPE_p_int src) {
    bool ret = VixenLibPINVOKE.DeviceBuffer_Set__SWIG_6(swigCPtr, name, SWIGTYPE_p_int.getCPtr(src));
    return ret;
  }

  public long DevHandle {
    set {
      VixenLibPINVOKE.DeviceBuffer_DevHandle_set(swigCPtr, value);
    } 
    get {
      long ret = VixenLibPINVOKE.DeviceBuffer_DevHandle_get(swigCPtr);
      return ret;
    } 
  }

  public string Layout {
    set {
      VixenLibPINVOKE.DeviceBuffer_Layout_set(swigCPtr, value);
    } 
    get {
      string ret = VixenLibPINVOKE.DeviceBuffer_Layout_get(swigCPtr);
      return ret;
    } 
  }

  public int ByteSize {
    set {
      VixenLibPINVOKE.DeviceBuffer_ByteSize_set(swigCPtr, value);
    } 
    get {
      int ret = VixenLibPINVOKE.DeviceBuffer_ByteSize_get(swigCPtr);
      return ret;
    } 
  }

}

}
