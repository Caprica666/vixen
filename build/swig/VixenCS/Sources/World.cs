/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace Vixen {

using System;
using System.Runtime.InteropServices;

public class World : SharedObj {
  private HandleRef swigCPtr;

  internal World(IntPtr cPtr, bool cMemoryOwn) : base(VixenLibPINVOKE.World_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(World obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~World() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          VixenLibPINVOKE.delete_World(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public World() : this(VixenLibPINVOKE.new_World(), true) {
  }

  public virtual float GetTime() {
    float ret = VixenLibPINVOKE.World_GetTime(swigCPtr);
    return ret;
  }

  public static World Get() {
    IntPtr cPtr = VixenLibPINVOKE.World_Get();
    World ret = (cPtr == IntPtr.Zero) ? null : new World(cPtr, false);
    return ret;
  }

  public virtual void SetMediaDir(string d) {
    VixenLibPINVOKE.World_SetMediaDir(swigCPtr, d);
  }

  public string GetMediaDir() {
    string ret = VixenLibPINVOKE.World_GetMediaDir(swigCPtr);
    return ret;
  }

  public virtual bool GetMediaPath(string srcfile, string dstpath, int maxlen) {
    bool ret = VixenLibPINVOKE.World_GetMediaPath(swigCPtr, srcfile, dstpath, maxlen);
    return ret;
  }

  public virtual bool LoadAsync(string fname, SharedObj observer) {
    bool ret = VixenLibPINVOKE.World_LoadAsync__SWIG_0(swigCPtr, fname, SharedObj.getCPtr(observer));
    return ret;
  }

  public virtual bool LoadAsync(string fname) {
    bool ret = VixenLibPINVOKE.World_LoadAsync__SWIG_1(swigCPtr, fname);
    return ret;
  }

  public virtual void Unload(string fname) {
    VixenLibPINVOKE.World_Unload(swigCPtr, fname);
  }

  public bool IsRunning() {
    bool ret = VixenLibPINVOKE.World_IsRunning(swigCPtr);
    return ret;
  }

  public virtual bool Run(long arg0) {
    bool ret = VixenLibPINVOKE.World_Run(swigCPtr, arg0);
    return ret;
  }

  public virtual void Stop() {
    VixenLibPINVOKE.World_Stop(swigCPtr);
  }

  public static bool Startup() {
    bool ret = VixenLibPINVOKE.World_Startup();
    return ret;
  }

  public static void Shutdown() {
    VixenLibPINVOKE.World_Shutdown();
  }

  public virtual bool ParseArgs(string command_line) {
    bool ret = VixenLibPINVOKE.World_ParseArgs(swigCPtr, command_line);
    return ret;
  }

  public virtual bool OnInit() {
    bool ret = VixenLibPINVOKE.World_OnInit(swigCPtr);
    return ret;
  }

  public virtual void OnExit() {
    VixenLibPINVOKE.World_OnExit(swigCPtr);
  }

  public double StartTime {
    set {
      VixenLibPINVOKE.World_StartTime_set(swigCPtr, value);
    } 
    get {
      double ret = VixenLibPINVOKE.World_StartTime_get(swigCPtr);
      return ret;
    } 
  }

  public static bool DoAsyncLoad {
    set {
      VixenLibPINVOKE.World_DoAsyncLoad_set(value);
    } 
    get {
      bool ret = VixenLibPINVOKE.World_DoAsyncLoad_get();
      return ret;
    } 
  }

  public static bool MakeConsole {
    set {
      VixenLibPINVOKE.World_MakeConsole_set(value);
    } 
    get {
      bool ret = VixenLibPINVOKE.World_MakeConsole_get();
      return ret;
    } 
  }

  public string FileName {
    set {
      VixenLibPINVOKE.World_FileName_set(swigCPtr, value);
    } 
    get {
      string ret = VixenLibPINVOKE.World_FileName_get(swigCPtr);
      return ret;
    } 
  }

}

}
