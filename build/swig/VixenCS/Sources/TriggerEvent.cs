/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace Vixen {

using System;
using System.Runtime.InteropServices;

public class TriggerEvent : Event {
  private HandleRef swigCPtr;

  internal TriggerEvent(IntPtr cPtr, bool cMemoryOwn) : base(VixenLibPINVOKE.TriggerEvent_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(TriggerEvent obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~TriggerEvent() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          VixenLibPINVOKE.delete_TriggerEvent(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public TriggerEvent(int code) : this(VixenLibPINVOKE.new_TriggerEvent__SWIG_0(code), true) {
  }

  public TriggerEvent() : this(VixenLibPINVOKE.new_TriggerEvent__SWIG_1(), true) {
  }

  public TriggerEvent(TriggerEvent src) : this(VixenLibPINVOKE.new_TriggerEvent__SWIG_2(TriggerEvent.getCPtr(src)), true) {
    if (VixenLibPINVOKE.SWIGPendingException.Pending) throw VixenLibPINVOKE.SWIGPendingException.Retrieve();
  }

  public SharedObj Target {
		set
		{
			ObjRef oref = new ObjRef(value);
			VixenLibPINVOKE.TriggerEvent_Target_set(swigCPtr, ObjRef.getCPtr(oref));
		}
	
		get
		{
			IntPtr iref = VixenLibPINVOKE.TriggerEvent_Target_get(swigCPtr);
			if (iref == IntPtr.Zero)
				return null;
			ObjRef oref = new ObjRef(iref, false);
			return oref.__ref__();
		}
	
  }

  public SharedObj Collider {
		set
		{
			ObjRef oref = new ObjRef(value);
			VixenLibPINVOKE.TriggerEvent_Collider_set(swigCPtr, ObjRef.getCPtr(oref));
		}
	
		get
		{
			IntPtr iref = VixenLibPINVOKE.TriggerEvent_Collider_get(swigCPtr);
			if (iref == IntPtr.Zero)
				return null;
			ObjRef oref = new ObjRef(iref, false);
			return oref.__ref__();
		}
	
  }

  public Vec3 CollidePos {
    set {
      VixenLibPINVOKE.TriggerEvent_CollidePos_set(swigCPtr, Vec3.getCPtr(value));
      if (VixenLibPINVOKE.SWIGPendingException.Pending) throw VixenLibPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      Vec3 ret = new Vec3(VixenLibPINVOKE.TriggerEvent_CollidePos_get(swigCPtr), false);
      if (VixenLibPINVOKE.SWIGPendingException.Pending) throw VixenLibPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

}

}
