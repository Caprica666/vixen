/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace Vixen {

using System;
using System.Runtime.InteropServices;

public class DirectLight : Light {
  private HandleRef swigCPtr;

  internal DirectLight(IntPtr cPtr, bool cMemoryOwn) : base(VixenLibPINVOKE.DirectLight_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(DirectLight obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~DirectLight() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          VixenLibPINVOKE.delete_DirectLight(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public DirectLight() : this(VixenLibPINVOKE.new_DirectLight(), true) {
  }

  public override Vec3 GetCenter(int arg0) {
    Vec3 ret = new Vec3(VixenLibPINVOKE.DirectLight_GetCenter__SWIG_0(swigCPtr, arg0), true);
    return ret;
  }

  public override bool GetCenter(Vec3 arg0, int arg1) {
    bool ret = VixenLibPINVOKE.DirectLight_GetCenter__SWIG_1(swigCPtr, Vec3.getCPtr(arg0), arg1);
    return ret;
  }

  public override bool GetCenter(Vec3 arg0) {
    bool ret = VixenLibPINVOKE.DirectLight_GetCenter__SWIG_2(swigCPtr, Vec3.getCPtr(arg0));
    return ret;
  }

}

}
