/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace Vixen {

using System;
using System.Runtime.InteropServices;

public class KeyEvent : Event {
  private HandleRef swigCPtr;

  internal KeyEvent(IntPtr cPtr, bool cMemoryOwn) : base(VixenLibPINVOKE.KeyEvent_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(KeyEvent obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~KeyEvent() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          VixenLibPINVOKE.delete_KeyEvent(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public KeyEvent() : this(VixenLibPINVOKE.new_KeyEvent__SWIG_0(), true) {
  }

  public KeyEvent(Event src) : this(VixenLibPINVOKE.new_KeyEvent__SWIG_1(Event.getCPtr(src)), true) {
    if (VixenLibPINVOKE.SWIGPendingException.Pending) throw VixenLibPINVOKE.SWIGPendingException.Retrieve();
  }

  public int KeyCode {
    set {
      VixenLibPINVOKE.KeyEvent_KeyCode_set(swigCPtr, value);
    } 
    get {
      int ret = VixenLibPINVOKE.KeyEvent_KeyCode_get(swigCPtr);
      return ret;
    } 
  }

  public int KeyFlags {
    set {
      VixenLibPINVOKE.KeyEvent_KeyFlags_set(swigCPtr, value);
    } 
    get {
      int ret = VixenLibPINVOKE.KeyEvent_KeyFlags_get(swigCPtr);
      return ret;
    } 
  }

  public static readonly int K_ESCAPE = VixenLibPINVOKE.KeyEvent_K_ESCAPE_get();
  public static readonly int K_END = VixenLibPINVOKE.KeyEvent_K_END_get();
  public static readonly int K_HOME = VixenLibPINVOKE.KeyEvent_K_HOME_get();
  public static readonly int K_LEFT = VixenLibPINVOKE.KeyEvent_K_LEFT_get();
  public static readonly int K_UP = VixenLibPINVOKE.KeyEvent_K_UP_get();
  public static readonly int K_RIGHT = VixenLibPINVOKE.KeyEvent_K_RIGHT_get();
  public static readonly int K_DOWN = VixenLibPINVOKE.KeyEvent_K_DOWN_get();
  public static readonly int K_INSERT = VixenLibPINVOKE.KeyEvent_K_INSERT_get();
  public static readonly int K_DELETE = VixenLibPINVOKE.KeyEvent_K_DELETE_get();
  public static readonly int K_PAGEUP = VixenLibPINVOKE.KeyEvent_K_PAGEUP_get();
  public static readonly int K_PAGEDOWN = VixenLibPINVOKE.KeyEvent_K_PAGEDOWN_get();
  public static readonly int K_F1 = VixenLibPINVOKE.KeyEvent_K_F1_get();
  public static readonly int K_F2 = VixenLibPINVOKE.KeyEvent_K_F2_get();
  public static readonly int K_F3 = VixenLibPINVOKE.KeyEvent_K_F3_get();
  public static readonly int K_F4 = VixenLibPINVOKE.KeyEvent_K_F4_get();
  public static readonly int K_F5 = VixenLibPINVOKE.KeyEvent_K_F5_get();
  public static readonly int K_F6 = VixenLibPINVOKE.KeyEvent_K_F6_get();
  public static readonly int K_F7 = VixenLibPINVOKE.KeyEvent_K_F7_get();
  public static readonly int K_F8 = VixenLibPINVOKE.KeyEvent_K_F8_get();
  public static readonly int K_F9 = VixenLibPINVOKE.KeyEvent_K_F9_get();
  public static readonly int K_F10 = VixenLibPINVOKE.KeyEvent_K_F10_get();
  public static readonly int K_F11 = VixenLibPINVOKE.KeyEvent_K_F11_get();
  public static readonly int K_F12 = VixenLibPINVOKE.KeyEvent_K_F12_get();
  public static readonly int K_ADD = VixenLibPINVOKE.KeyEvent_K_ADD_get();
  public static readonly int K_SUBTRACT = VixenLibPINVOKE.KeyEvent_K_SUBTRACT_get();
  public static readonly int K_CONTROL = VixenLibPINVOKE.KeyEvent_K_CONTROL_get();

  public static readonly int ALT = VixenLibPINVOKE.KeyEvent_ALT_get();
  public static readonly int UP = VixenLibPINVOKE.KeyEvent_UP_get();
  public static readonly int REPEAT = VixenLibPINVOKE.KeyEvent_REPEAT_get();
  public static readonly int MASK = VixenLibPINVOKE.KeyEvent_MASK_get();

}

}
