/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace Vixen {

using System;
using System.Runtime.InteropServices;

public class SharedWorld : World3D {
  private HandleRef swigCPtr;

  internal SharedWorld(IntPtr cPtr, bool cMemoryOwn) : base(VixenLibPINVOKE.SharedWorld_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(SharedWorld obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~SharedWorld() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          VixenLibPINVOKE.delete_SharedWorld(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

			public static Scene MainScene { get { return VixenLib.GetMainScene(); } }			
		
  public SharedWorld() : this(VixenLibPINVOKE.new_SharedWorld(), true) {
  }

  public new static SharedWorld Get() 
	{
		IntPtr cPtr = VixenLibPINVOKE.SharedWorld_Get();
		return (SharedWorld)  SharedObj.MakeObject(cPtr, true);
	}


  public string GetMediaDir() {
    string ret = VixenLibPINVOKE.SharedWorld_GetMediaDir(swigCPtr);
    return ret;
  }

  public void StopEvents() {
    VixenLibPINVOKE.SharedWorld_StopEvents(swigCPtr);
  }

  public Event NextEvent() {
    IntPtr cPtr = VixenLibPINVOKE.SharedWorld_NextEvent(swigCPtr);
    Event ret = (cPtr == IntPtr.Zero) ? null : new Event(cPtr, false);
    return ret;
  }

  public void Observe(int eventcode, SharedObj observer, SharedObj sender) {
    VixenLibPINVOKE.SharedWorld_Observe__SWIG_0(swigCPtr, eventcode, SharedObj.getCPtr(observer), SharedObj.getCPtr(sender));
  }

  public void Observe(int eventcode, SharedObj observer) {
    VixenLibPINVOKE.SharedWorld_Observe__SWIG_1(swigCPtr, eventcode, SharedObj.getCPtr(observer));
  }

  public void Observe(int eventcode) {
    VixenLibPINVOKE.SharedWorld_Observe__SWIG_2(swigCPtr, eventcode);
  }

  public void OnMouse(int xpos, int ypos, int flags, float time) {
    VixenLibPINVOKE.SharedWorld_OnMouse(swigCPtr, xpos, ypos, flags, time);
  }

  public void SuspendScene() {
    VixenLibPINVOKE.SharedWorld_SuspendScene(swigCPtr);
  }

  public void ResumeScene() {
    VixenLibPINVOKE.SharedWorld_ResumeScene(swigCPtr);
  }

  public bool SaveAsVix(SharedObj obj, string filename) {
    bool ret = VixenLibPINVOKE.SharedWorld_SaveAsVix(swigCPtr, SharedObj.getCPtr(obj), filename);
    return ret;
  }

  public static void LogError(string s) {
    VixenLibPINVOKE.SharedWorld_LogError(s);
  }

  public static void Trace(string s) {
    VixenLibPINVOKE.SharedWorld_Trace(s);
  }

  public static void SetDebugLevel(int debug) {
    VixenLibPINVOKE.SharedWorld_SetDebugLevel(debug);
  }

}

}
