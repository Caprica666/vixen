/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace Vixen {

using System;
using System.Runtime.InteropServices;

public class SharedVec3Array : CoreVec3Array {
  private HandleRef swigCPtr;

  internal SharedVec3Array(IntPtr cPtr, bool cMemoryOwn) : base(VixenLibPINVOKE.SharedVec3Array_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(SharedVec3Array obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~SharedVec3Array() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          VixenLibPINVOKE.delete_SharedVec3Array(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public SharedVec3Array(int size, Vec3 data) : this(VixenLibPINVOKE.new_SharedVec3Array__SWIG_0(size, Vec3.getCPtr(data)), true) {
  }

  public SharedVec3Array(int size) : this(VixenLibPINVOKE.new_SharedVec3Array__SWIG_1(size), true) {
  }

  public SharedVec3Array() : this(VixenLibPINVOKE.new_SharedVec3Array__SWIG_2(), true) {
  }

  public new bool SetAt(int i, Vec3 p) {
    bool ret = VixenLibPINVOKE.SharedVec3Array_SetAt(swigCPtr, i, Vec3.getCPtr(p));
    if (VixenLibPINVOKE.SWIGPendingException.Pending) throw VixenLibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public new bool RemoveAt(int i, int n) {
    bool ret = VixenLibPINVOKE.SharedVec3Array_RemoveAt__SWIG_0(swigCPtr, i, n);
    return ret;
  }

  public new bool RemoveAt(int i) {
    bool ret = VixenLibPINVOKE.SharedVec3Array_RemoveAt__SWIG_1(swigCPtr, i);
    return ret;
  }

  public virtual int Merge(SharedVec3Array src) {
    int ret = VixenLibPINVOKE.SharedVec3Array_Merge(swigCPtr, SharedVec3Array.getCPtr(src));
    if (VixenLibPINVOKE.SWIGPendingException.Pending) throw VixenLibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}

}
