/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace Vixen {

using System;
using System.Runtime.InteropServices;

public class Mesh : Geometry {
  private HandleRef swigCPtr;

  internal Mesh(IntPtr cPtr, bool cMemoryOwn) : base(VixenLibPINVOKE.Mesh_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(Mesh obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~Mesh() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          VixenLibPINVOKE.delete_Mesh(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public Mesh() : this(VixenLibPINVOKE.new_Mesh__SWIG_0(), true) {
  }

  public Mesh(int style, long maxvtx) : this(VixenLibPINVOKE.new_Mesh__SWIG_1(style, maxvtx), true) {
  }

  public Mesh(int style) : this(VixenLibPINVOKE.new_Mesh__SWIG_2(style), true) {
  }

  public Mesh(string layout_desc, long maxvtx) : this(VixenLibPINVOKE.new_Mesh__SWIG_3(layout_desc, maxvtx), true) {
  }

  public Mesh(string layout_desc) : this(VixenLibPINVOKE.new_Mesh__SWIG_4(layout_desc), true) {
  }

  public Mesh(Mesh arg0) : this(VixenLibPINVOKE.new_Mesh__SWIG_5(Mesh.getCPtr(arg0)), true) {
    if (VixenLibPINVOKE.SWIGPendingException.Pending) throw VixenLibPINVOKE.SWIGPendingException.Retrieve();
  }

  public int GetStyle() {
    int ret = VixenLibPINVOKE.Mesh_GetStyle(swigCPtr);
    return ret;
  }

  public bool SetMaxVtx(long arg0) {
    bool ret = VixenLibPINVOKE.Mesh_SetMaxVtx(swigCPtr, arg0);
    return ret;
  }

  public long GetIndex(long index) {
    long ret = VixenLibPINVOKE.Mesh_GetIndex(swigCPtr, index);
    return ret;
  }

  public bool SetIndex(long index, long v) {
    bool ret = VixenLibPINVOKE.Mesh_SetIndex(swigCPtr, index, v);
    return ret;
  }

  public bool AddIndex(long v) {
    bool ret = VixenLibPINVOKE.Mesh_AddIndex(swigCPtr, v);
    return ret;
  }

  public long AddIndices(int[] intArray, long size) {
    long ret = VixenLibPINVOKE.Mesh_AddIndices(swigCPtr, intArray, size);
    return ret;
  }

  public long AddVertices(float[] floatArray, long size) {
    long ret = VixenLibPINVOKE.Mesh_AddVertices(swigCPtr, floatArray, size);
    return ret;
  }

  public VertexArray Vertices {
    set {
      VixenLibPINVOKE.Mesh_Vertices_set(swigCPtr, VertexArray.getCPtr(value));
    } 
	get
	{
		IntPtr cPtr = VixenLibPINVOKE.Mesh_Vertices_get(swigCPtr);
		return (VertexArray) SharedObj.MakeObject(cPtr, false);
	}

  }

  public IntArray Indices {
    set {
      VixenLibPINVOKE.Mesh_Indices_set(swigCPtr, IntArray.getCPtr(value));
    } 
	get
	{
		IntPtr cPtr = VixenLibPINVOKE.Mesh_Indices_get(swigCPtr);
		return (IntArray) SharedObj.MakeObject(cPtr, false);
	}

  }

  public int VertexSize {
    set {
      VixenLibPINVOKE.Mesh_VertexSize_set(swigCPtr, value);
    } 
    get {
      int ret = VixenLibPINVOKE.Mesh_VertexSize_get(swigCPtr);
      return ret;
    } 
  }

  public long IndexCount {
    set {
      VixenLibPINVOKE.Mesh_IndexCount_set(swigCPtr, value);
    } 
    get {
      long ret = VixenLibPINVOKE.Mesh_IndexCount_get(swigCPtr);
      return ret;
    } 
  }

  public long VertexCount {
    set {
      VixenLibPINVOKE.Mesh_VertexCount_set(swigCPtr, value);
    } 
    get {
      long ret = VixenLibPINVOKE.Mesh_VertexCount_get(swigCPtr);
      return ret;
    } 
  }

  public long StartVertex {
    set {
      VixenLibPINVOKE.Mesh_StartVertex_set(swigCPtr, value);
    } 
    get {
      long ret = VixenLibPINVOKE.Mesh_StartVertex_get(swigCPtr);
      return ret;
    } 
  }

  public long EndVertex {
    set {
      VixenLibPINVOKE.Mesh_EndVertex_set(swigCPtr, value);
    } 
    get {
      long ret = VixenLibPINVOKE.Mesh_EndVertex_get(swigCPtr);
      return ret;
    } 
  }

}

}
