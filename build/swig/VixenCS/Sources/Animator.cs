/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace Vixen {

using System;
using System.Runtime.InteropServices;

public class Animator : Engine {
  private HandleRef swigCPtr;

  internal Animator(IntPtr cPtr, bool cMemoryOwn) : base(VixenLibPINVOKE.Animator_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(Animator obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~Animator() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          VixenLibPINVOKE.delete_Animator(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public Animator(string name) : this(VixenLibPINVOKE.new_Animator__SWIG_0(name), true) {
  }

  public Animator() : this(VixenLibPINVOKE.new_Animator__SWIG_1(), true) {
  }

  public string GetEngineName(string namebuf) {
    string ret = VixenLibPINVOKE.Animator_GetEngineName(swigCPtr, namebuf);
    return ret;
  }

  public void SetEngineName(string name) {
    VixenLibPINVOKE.Animator_SetEngineName(swigCPtr, name);
  }

  public string GetFileName() {
    string ret = VixenLibPINVOKE.Animator_GetFileName(swigCPtr);
    return ret;
  }

  public Engine GetRootEngine() 
	{
		IntPtr cPtr = VixenLibPINVOKE.Animator_GetRootEngine(swigCPtr);
		return (Engine)  SharedObj.MakeObject(cPtr, true);
	}


  public void SetOptions(int opts) {
    VixenLibPINVOKE.Animator_SetOptions(swigCPtr, opts);
  }

  public int GetOptions() {
    int ret = VixenLibPINVOKE.Animator_GetOptions(swigCPtr);
    return ret;
  }

  public bool SetFileName(string filename) {
    bool ret = VixenLibPINVOKE.Animator_SetFileName(swigCPtr, filename);
    return ret;
  }

  public void SetRootEngine(Engine root) {
    VixenLibPINVOKE.Animator_SetRootEngine(swigCPtr, Engine.getCPtr(root));
  }

  public void SetLeader(Engine arg0, int playopts) {
    VixenLibPINVOKE.Animator_SetLeader__SWIG_0(swigCPtr, Engine.getCPtr(arg0), playopts);
  }

  public void SetLeader(Engine arg0) {
    VixenLibPINVOKE.Animator_SetLeader__SWIG_1(swigCPtr, Engine.getCPtr(arg0));
  }

  public Engine GetLeader() 
	{
		IntPtr cPtr = VixenLibPINVOKE.Animator_GetLeader(swigCPtr);
		return (Engine)  SharedObj.MakeObject(cPtr, true);
	}


  public virtual void Kill() {
    VixenLibPINVOKE.Animator_Kill(swigCPtr);
  }

  public void Load(string animfile, int opts) {
    VixenLibPINVOKE.Animator_Load__SWIG_0(swigCPtr, animfile, opts);
  }

  public void Load(string animfile) {
    VixenLibPINVOKE.Animator_Load__SWIG_1(swigCPtr, animfile);
  }

  public virtual void Blend(float time, int opts) {
    VixenLibPINVOKE.Animator_Blend__SWIG_0(swigCPtr, time, opts);
  }

  public virtual void Blend(float time) {
    VixenLibPINVOKE.Animator_Blend__SWIG_1(swigCPtr, time);
  }

  public Engine Init(bool play) 
	{
		IntPtr cPtr = VixenLibPINVOKE.Animator_Init(swigCPtr, play);
		return (Engine)  SharedObj.MakeObject(cPtr, true);
	}


  public string MakeName(string engname) {
    string ret = VixenLibPINVOKE.Animator_MakeName(swigCPtr, engname);
    return ret;
  }

  public static string GetPrefix(string buf, string fullname) {
    string ret = VixenLibPINVOKE.Animator_GetPrefix(buf, fullname);
    return ret;
  }

  public override void Start(int arg0) {
    VixenLibPINVOKE.Animator_Start__SWIG_0(swigCPtr, arg0);
  }

  public override void Start() {
    VixenLibPINVOKE.Animator_Start__SWIG_1(swigCPtr);
  }

  public override void Stop(int arg0) {
    VixenLibPINVOKE.Animator_Stop__SWIG_0(swigCPtr, arg0);
  }

  public override void Stop() {
    VixenLibPINVOKE.Animator_Stop__SWIG_1(swigCPtr);
  }

  public override void Enable(int flags, int who) {
    VixenLibPINVOKE.Animator_Enable__SWIG_0(swigCPtr, flags, who);
  }

  public override void Enable(int flags) {
    VixenLibPINVOKE.Animator_Enable__SWIG_1(swigCPtr, flags);
  }

  public override void Disable(int flags, int who) {
    VixenLibPINVOKE.Animator_Disable__SWIG_0(swigCPtr, flags, who);
  }

  public override void Disable(int flags) {
    VixenLibPINVOKE.Animator_Disable__SWIG_1(swigCPtr, flags);
  }

  public virtual float ComputeDuration(Engine root) {
    float ret = VixenLibPINVOKE.Animator_ComputeDuration(swigCPtr, Engine.getCPtr(root));
    return ret;
  }

  public static readonly int AUTO_PLAY = VixenLibPINVOKE.Animator_AUTO_PLAY_get();
  public static readonly int LOAD_STREAM = VixenLibPINVOKE.Animator_LOAD_STREAM_get();
  public static readonly int KILL_ON_STOP = VixenLibPINVOKE.Animator_KILL_ON_STOP_get();
  public static readonly int ISATTACHED = VixenLibPINVOKE.Animator_ISATTACHED_get();
  public static readonly int FROM_FILE = VixenLibPINVOKE.Animator_FROM_FILE_get();
  public static readonly int ISLOADING = VixenLibPINVOKE.Animator_ISLOADING_get();
  public static readonly int WAS_KILLED = VixenLibPINVOKE.Animator_WAS_KILLED_get();
  public static readonly int MERGED = VixenLibPINVOKE.Animator_MERGED_get();
  public static readonly int PLAY_AFTER = VixenLibPINVOKE.Animator_PLAY_AFTER_get();
  public static readonly int PLAY_WITH = VixenLibPINVOKE.Animator_PLAY_WITH_get();
  public static readonly int PLAY_RELATIVE = VixenLibPINVOKE.Animator_PLAY_RELATIVE_get();
  public static readonly int PLAYOPTS = VixenLibPINVOKE.Animator_PLAYOPTS_get();

}

}
