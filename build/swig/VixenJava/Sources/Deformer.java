/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package Vixen;

public class Deformer extends Engine {
  private long swigCPtr;

  public Deformer(long cPtr, boolean cMemoryOwn) {
    super(VixenLibJNI.Deformer_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  public static long getCPtr(Deformer obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        VixenLibJNI.delete_Deformer(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public Deformer() {
    this(VixenLibJNI.new_Deformer(), true);
  }

  public void SetRestPose(VertexArray arg0) {
    VixenLibJNI.Deformer_SetRestPose(swigCPtr, this, VertexArray.getCPtr(arg0), arg0);
  }

  public void SetActiveVerts(VertexArray arg0) {
    VixenLibJNI.Deformer_SetActiveVerts(swigCPtr, this, VertexArray.getCPtr(arg0), arg0);
  }

  public void SetVertexMap(IntArray arg0) {
    VixenLibJNI.Deformer_SetVertexMap(swigCPtr, this, IntArray.getCPtr(arg0), arg0);
  }

  public boolean MakeVertexMap(VertexArray arg0) {
    return VixenLibJNI.Deformer_MakeVertexMap(swigCPtr, this, VertexArray.getCPtr(arg0), arg0);
  }

  public IntArray GetVertexMap() {
    long cPtr = VixenLibJNI.Deformer_GetVertexMap(swigCPtr, this);
    return (cPtr == 0) ? null : new IntArray(cPtr, false);
  }

  public VertexArray GetRestPose() 
	{
		jlong ptr = VixenLibJNI.Deformer_GetRestPose(swigCPtr, this);
		return (VertexArray)  SharedObj.MakeObject(ptr, true);
	}


  public VertexArray GetActiveVerts() 
	{
		jlong ptr = VixenLibJNI.Deformer_GetActiveVerts(swigCPtr, this);
		return (VertexArray)  SharedObj.MakeObject(ptr, true);
	}


  public boolean Copy(SharedObj arg0) {
    return VixenLibJNI.Deformer_Copy(swigCPtr, this, SharedObj.getCPtr(arg0), arg0);
  }

  public void SetTarget(SharedObj arg0) {
    VixenLibJNI.Deformer_SetTarget(swigCPtr, this, SharedObj.getCPtr(arg0), arg0);
  }

  public float ComputeTime(float t) {
    return VixenLibJNI.Deformer_ComputeTime(swigCPtr, this, t);
  }

  public static boolean UpdateVertices(VertexArray srcverts, VertexArray dstverts, IntArray vmap) {
    return VixenLibJNI.Deformer_UpdateVertices(VertexArray.getCPtr(srcverts), srcverts, VertexArray.getCPtr(dstverts), dstverts, IntArray.getCPtr(vmap), vmap);
  }

}
