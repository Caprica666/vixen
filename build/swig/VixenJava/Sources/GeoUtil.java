/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package Vixen;

public class GeoUtil {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  public GeoUtil(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  public static long getCPtr(GeoUtil obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        VixenLibJNI.delete_GeoUtil(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public static boolean Rect(TriMesh mesh, float w, float h, float xtex, float ytex) {
    return VixenLibJNI.GeoUtil_Rect__SWIG_0(TriMesh.getCPtr(mesh), mesh, w, h, xtex, ytex);
  }

  public static boolean Rect(TriMesh mesh, float w, float h, float xtex) {
    return VixenLibJNI.GeoUtil_Rect__SWIG_1(TriMesh.getCPtr(mesh), mesh, w, h, xtex);
  }

  public static boolean Rect(TriMesh mesh, float w, float h) {
    return VixenLibJNI.GeoUtil_Rect__SWIG_2(TriMesh.getCPtr(mesh), mesh, w, h);
  }

  public static boolean Rect(TriMesh mesh, float w) {
    return VixenLibJNI.GeoUtil_Rect__SWIG_3(TriMesh.getCPtr(mesh), mesh, w);
  }

  public static boolean Rect(TriMesh mesh) {
    return VixenLibJNI.GeoUtil_Rect__SWIG_4(TriMesh.getCPtr(mesh), mesh);
  }

  public static boolean Block(TriMesh mesh, Vec3 size) {
    return VixenLibJNI.GeoUtil_Block(TriMesh.getCPtr(mesh), mesh, Vec3.getCPtr(size), size);
  }

  public static boolean QuadMesh(TriMesh mesh, int rows, int cols, float INPUT, long firstvtx) {
    return VixenLibJNI.GeoUtil_QuadMesh(TriMesh.getCPtr(mesh), mesh, rows, cols, INPUT, firstvtx);
  }

  public static boolean Torus(TriMesh mesh, float irad, float orad, int res) {
    return VixenLibJNI.GeoUtil_Torus(TriMesh.getCPtr(mesh), mesh, irad, orad, res);
  }

  public static boolean Cylinder(TriMesh mesh, int parts, float tradius, float bradius, float height, int res) {
    return VixenLibJNI.GeoUtil_Cylinder(TriMesh.getCPtr(mesh), mesh, parts, tradius, bradius, height, res);
  }

  public static boolean Ellipsoid(TriMesh mesh, Vec3 size, int res) {
    return VixenLibJNI.GeoUtil_Ellipsoid(TriMesh.getCPtr(mesh), mesh, Vec3.getCPtr(size), size, res);
  }

  public static boolean IcosaSphere(TriMesh mesh, float fRadius, int depth, boolean hemi) {
    return VixenLibJNI.GeoUtil_IcosaSphere(TriMesh.getCPtr(mesh), mesh, fRadius, depth, hemi);
  }

  public GeoUtil() {
    this(VixenLibJNI.new_GeoUtil(), true);
  }

  public enum CylinderPart {
    CYL_SIDE(VixenLibJNI.GeoUtil_CYL_SIDE_get()),
    CYL_TOP(VixenLibJNI.GeoUtil_CYL_TOP_get()),
    CYL_BASE(VixenLibJNI.GeoUtil_CYL_BASE_get());

    public final int swigValue() {
      return swigValue;
    }

    public static CylinderPart swigToEnum(int swigValue) {
      CylinderPart[] swigValues = CylinderPart.class.getEnumConstants();
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (CylinderPart swigEnum : swigValues)
        if (swigEnum.swigValue == swigValue)
          return swigEnum;
      throw new IllegalArgumentException("No enum " + CylinderPart.class + " with value " + swigValue);
    }

    @SuppressWarnings("unused")
    private CylinderPart() {
      this.swigValue = SwigNext.next++;
    }

    @SuppressWarnings("unused")
    private CylinderPart(int swigValue) {
      this.swigValue = swigValue;
      SwigNext.next = swigValue+1;
    }

    @SuppressWarnings("unused")
    private CylinderPart(CylinderPart swigEnum) {
      this.swigValue = swigEnum.swigValue;
      SwigNext.next = this.swigValue+1;
    }

    private final int swigValue;

    private static class SwigNext {
      private static int next = 0;
    }
  }

}
