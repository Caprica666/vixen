/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package Vixen;

public class Interpolator extends Evaluator {
  private long swigCPtr;

  public Interpolator(long cPtr, boolean cMemoryOwn) {
    super(VixenLibJNI.Interpolator_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  public static long getCPtr(Interpolator obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        VixenLibJNI.delete_Interpolator(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public Interpolator() {
    this(VixenLibJNI.new_Interpolator(), true);
  }

  public void SetInterpType(int t) {
    VixenLibJNI.Interpolator_SetInterpType(swigCPtr, this, t);
  }

  public int GetInterpType() {
    return VixenLibJNI.Interpolator_GetInterpType(swigCPtr, this);
  }

  public int GetSize() {
    return VixenLibJNI.Interpolator_GetSize(swigCPtr, this);
  }

  public void SetSize(int size) {
    VixenLibJNI.Interpolator_SetSize(swigCPtr, this, size);
  }

  public int GetMaxSize() {
    return VixenLibJNI.Interpolator_GetMaxSize(swigCPtr, this);
  }

  public void SetMaxSize(int size) {
    VixenLibJNI.Interpolator_SetMaxSize(swigCPtr, this, size);
  }

  public float GetTime(int i) {
    return VixenLibJNI.Interpolator_GetTime(swigCPtr, this, i);
  }

  public boolean AddKey(float time, SWIGTYPE_p_float floatArray) {
    return VixenLibJNI.Interpolator_AddKey(swigCPtr, this, time, SWIGTYPE_p_float.getCPtr(floatArray));
  }

  public void SetKeys(FloatArray keydata) {
    VixenLibJNI.Interpolator_SetKeys(swigCPtr, this, FloatArray.getCPtr(keydata), keydata);
  }

  public FloatArray GetKeys() {
    long cPtr = VixenLibJNI.Interpolator_GetKeys(swigCPtr, this);
    return (cPtr == 0) ? null : new FloatArray(cPtr, false);
  }

  public void ScaleKeys(float scale_factor) {
    VixenLibJNI.Interpolator_ScaleKeys(swigCPtr, this, scale_factor);
  }

  public void ClearDest() {
    VixenLibJNI.Interpolator_ClearDest(swigCPtr, this);
  }

  public boolean Copy(SharedObj arg0) {
    return VixenLibJNI.Interpolator_Copy(swigCPtr, this, SharedObj.getCPtr(arg0), arg0);
  }

}
