/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package Vixen;

public class Skeleton extends Engine {
  private long swigCPtr;

  public Skeleton(long cPtr, boolean cMemoryOwn) {
    super(VixenLibJNI.Skeleton_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  public static long getCPtr(Skeleton obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        VixenLibJNI.delete_Skeleton(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public Skeleton(int numbones) {
    this(VixenLibJNI.new_Skeleton__SWIG_0(numbones), true);
  }

  public Skeleton() {
    this(VixenLibJNI.new_Skeleton__SWIG_1(), true);
  }

  public Skeleton(Skeleton src) {
    this(VixenLibJNI.new_Skeleton__SWIG_2(Skeleton.getCPtr(src), src), true);
  }

  public Model MakeSkeleton(String name, Quat rotations, Vec3 positionsL, SWIGTYPE_p_float bonelengthsL, float bonewidth) 
	{
		jlong ptr = VixenLibJNI.Skeleton_MakeSkeleton__SWIG_0(swigCPtr, this, name, Quat.getCPtr(rotations), rotations, Vec3.getCPtr(positionsL), positionsL, SWIGTYPE_p_float.getCPtr(bonelengthsL), bonewidth);
		return (Model)  SharedObj.MakeObject(ptr, true);
	}


  public Model MakeSkeleton(String name) 
	{
		jlong ptr = VixenLibJNI.Skeleton_MakeSkeleton__SWIG_1(swigCPtr, this, name);
		return (Model)  SharedObj.MakeObject(ptr, true);
	}


  public Box3 GetBound() {
    return new Box3(VixenLibJNI.Skeleton_GetBound(swigCPtr, this), false);
  }

  public Vec3 GetPosition() {
    return new Vec3(VixenLibJNI.Skeleton_GetPosition(swigCPtr, this), true);
  }

  public void SetPosition(Vec3 p) {
    VixenLibJNI.Skeleton_SetPosition(swigCPtr, this, Vec3.getCPtr(p), p);
  }

  public Vec3 GetRootOffset() {
    return new Vec3(VixenLibJNI.Skeleton_GetRootOffset(swigCPtr, this), false);
  }

  public void SetRootOffset(Vec3 arg0) {
    VixenLibJNI.Skeleton_SetRootOffset(swigCPtr, this, Vec3.getCPtr(arg0), arg0);
  }

  public void SetBindPose(Pose pose) {
    VixenLibJNI.Skeleton_SetBindPose(swigCPtr, this, Pose.getCPtr(pose), pose);
  }

  public Pose GetBindPose() 
	{
		jlong ptr = VixenLibJNI.Skeleton_GetBindPose(swigCPtr, this);
		return (Pose)  SharedObj.MakeObject(ptr, true);
	}


  public Pose GetPose() 
	{
		jlong ptr = VixenLibJNI.Skeleton_GetPose(swigCPtr, this);
		return (Pose)  SharedObj.MakeObject(ptr, true);
	}


  public Pose MakePose(int coordspace) 
	{
		jlong ptr = VixenLibJNI.Skeleton_MakePose(swigCPtr, this, coordspace);
		return (Pose)  SharedObj.MakeObject(ptr, true);
	}


  public void SetPose(Pose pose) {
    VixenLibJNI.Skeleton_SetPose(swigCPtr, this, Pose.getCPtr(pose), pose);
  }

  public void ApplyPose(Pose pose) {
    VixenLibJNI.Skeleton_ApplyPose(swigCPtr, this, Pose.getCPtr(pose), pose);
  }

  public void RestoreBindPose() {
    VixenLibJNI.Skeleton_RestoreBindPose(swigCPtr, this);
  }

  public int GetBoneIndex(String bonename) {
    return VixenLibJNI.Skeleton_GetBoneIndex__SWIG_0(swigCPtr, this, bonename);
  }

  public int GetParentBoneIndex(int boneindex) {
    return VixenLibJNI.Skeleton_GetParentBoneIndex(swigCPtr, this, boneindex);
  }

  public boolean SetParentBoneIndex(int boneindex, int parentindex) {
    return VixenLibJNI.Skeleton_SetParentBoneIndex(swigCPtr, this, boneindex, parentindex);
  }

  public int GetBoneIndex(Engine bone) {
    return VixenLibJNI.Skeleton_GetBoneIndex__SWIG_1(swigCPtr, this, Engine.getCPtr(bone), bone);
  }

  public int GetNumBones() {
    return VixenLibJNI.Skeleton_GetNumBones(swigCPtr, this);
  }

  public Vec3 GetBoneAxis() {
    return new Vec3(VixenLibJNI.Skeleton_GetBoneAxis(swigCPtr, this), false);
  }

  public void SetBoneAxis(Vec3 arg0) {
    VixenLibJNI.Skeleton_SetBoneAxis(swigCPtr, this, Vec3.getCPtr(arg0), arg0);
  }

  public void SetBoneName(int boneindex, String bonename) {
    VixenLibJNI.Skeleton_SetBoneName(swigCPtr, this, boneindex, bonename);
  }

  public String GetBoneName(int boneindex) {
    return VixenLibJNI.Skeleton_GetBoneName(swigCPtr, this, boneindex);
  }

  public Transformer GetBone(int boneindex) {
    long cPtr = VixenLibJNI.Skeleton_GetBone(swigCPtr, this, boneindex);
    return (cPtr == 0) ? null : new Transformer(cPtr, false);
  }

  public void SetBoneOptions(int boneindex, int options) {
    VixenLibJNI.Skeleton_SetBoneOptions(swigCPtr, this, boneindex, options);
  }

  public int GetBoneOptions(int boneindex) {
    return VixenLibJNI.Skeleton_GetBoneOptions(swigCPtr, this, boneindex);
  }

  public boolean IsLocked(int boneindex) {
    return VixenLibJNI.Skeleton_IsLocked(swigCPtr, this, boneindex);
  }

  public void AttachBones(Model root, Engine engroot, int parentbone) {
    VixenLibJNI.Skeleton_AttachBones__SWIG_0(swigCPtr, this, Model.getCPtr(root), root, Engine.getCPtr(engroot), engroot, parentbone);
  }

  public void AttachBones(Model root, Engine engroot) {
    VixenLibJNI.Skeleton_AttachBones__SWIG_1(swigCPtr, this, Model.getCPtr(root), root, Engine.getCPtr(engroot), engroot);
  }

  public void AttachBones(Model root) {
    VixenLibJNI.Skeleton_AttachBones__SWIG_2(swigCPtr, this, Model.getCPtr(root), root);
  }

  public void FindBones(Pose pose) {
    VixenLibJNI.Skeleton_FindBones__SWIG_0(swigCPtr, this, Pose.getCPtr(pose), pose);
  }

  public void FindBones() {
    VixenLibJNI.Skeleton_FindBones__SWIG_1(swigCPtr, this);
  }

  public Shape MakeLimb(String name, Model parent, Quat jointrot, Vec3 jointpos, Appearance app, float bonelen, float bonewidth) 
	{
		jlong ptr = VixenLibJNI.Skeleton_MakeLimb(swigCPtr, this, name, Model.getCPtr(parent), parent, Quat.getCPtr(jointrot), jointrot, Vec3.getCPtr(jointpos), jointpos, Appearance.getCPtr(app), app, bonelen, bonewidth);
		return (Shape)  SharedObj.MakeObject(ptr, true);
	}


  public void Compute(float arg0) {
    VixenLibJNI.Skeleton_Compute(swigCPtr, this, arg0);
  }

  public void SetTarget(SharedObj target) {
    VixenLibJNI.Skeleton_SetTarget(swigCPtr, this, SharedObj.getCPtr(target), target);
  }

  public boolean Copy(SharedObj arg0) {
    return VixenLibJNI.Skeleton_Copy(swigCPtr, this, SharedObj.getCPtr(arg0), arg0);
  }

  public void Empty() {
    VixenLibJNI.Skeleton_Empty(swigCPtr, this);
  }

  public final static int WAIST = VixenLibJNI.Skeleton_WAIST_get();
  public final static int TORSO = VixenLibJNI.Skeleton_TORSO_get();
  public final static int NECK = VixenLibJNI.Skeleton_NECK_get();
  public final static int HEAD = VixenLibJNI.Skeleton_HEAD_get();
  public final static int RIGHT_COLLAR = VixenLibJNI.Skeleton_RIGHT_COLLAR_get();
  public final static int RIGHT_SHOULDER = VixenLibJNI.Skeleton_RIGHT_SHOULDER_get();
  public final static int RIGHT_ELBOW = VixenLibJNI.Skeleton_RIGHT_ELBOW_get();
  public final static int RIGHT_WRIST = VixenLibJNI.Skeleton_RIGHT_WRIST_get();
  public final static int RIGHT_HAND = VixenLibJNI.Skeleton_RIGHT_HAND_get();
  public final static int RIGHT_FINGER = VixenLibJNI.Skeleton_RIGHT_FINGER_get();
  public final static int LEFT_COLLAR = VixenLibJNI.Skeleton_LEFT_COLLAR_get();
  public final static int LEFT_SHOULDER = VixenLibJNI.Skeleton_LEFT_SHOULDER_get();
  public final static int LEFT_ELBOW = VixenLibJNI.Skeleton_LEFT_ELBOW_get();
  public final static int LEFT_WRIST = VixenLibJNI.Skeleton_LEFT_WRIST_get();
  public final static int LEFT_HAND = VixenLibJNI.Skeleton_LEFT_HAND_get();
  public final static int LEFT_FINGER = VixenLibJNI.Skeleton_LEFT_FINGER_get();
  public final static int RIGHT_HIP = VixenLibJNI.Skeleton_RIGHT_HIP_get();
  public final static int RIGHT_KNEE = VixenLibJNI.Skeleton_RIGHT_KNEE_get();
  public final static int RIGHT_ANKLE = VixenLibJNI.Skeleton_RIGHT_ANKLE_get();
  public final static int RIGHT_FOOT = VixenLibJNI.Skeleton_RIGHT_FOOT_get();
  public final static int LEFT_HIP = VixenLibJNI.Skeleton_LEFT_HIP_get();
  public final static int LEFT_KNEE = VixenLibJNI.Skeleton_LEFT_KNEE_get();
  public final static int LEFT_ANKLE = VixenLibJNI.Skeleton_LEFT_ANKLE_get();
  public final static int LEFT_FOOT = VixenLibJNI.Skeleton_LEFT_FOOT_get();
  public final static int NUM_BONES = VixenLibJNI.Skeleton_NUM_BONES_get();
  public final static int WORLD_ABSOLUTE = VixenLibJNI.Skeleton_WORLD_ABSOLUTE_get();
  public final static int WORLD_BIND = VixenLibJNI.Skeleton_WORLD_BIND_get();
  public final static int BONE_LOCK_ROTATION = VixenLibJNI.Skeleton_BONE_LOCK_ROTATION_get();
  public final static int BONE_ANIMATE = VixenLibJNI.Skeleton_BONE_ANIMATE_get();
  public final static int BONE_PHYSICS = VixenLibJNI.Skeleton_BONE_PHYSICS_get();

}
