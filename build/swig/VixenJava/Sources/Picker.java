/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package Vixen;

public class Picker extends MouseEngine {
  private long swigCPtr;

  public Picker(long cPtr, boolean cMemoryOwn) {
    super(VixenLibJNI.Picker_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  public static long getCPtr(Picker obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        VixenLibJNI.delete_Picker(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public Picker() {
    this(VixenLibJNI.new_Picker(), true);
  }

  public float GetNearDist() {
    return VixenLibJNI.Picker_GetNearDist(swigCPtr, this);
  }

  public ObjArray GetSelected() {
    long cPtr = VixenLibJNI.Picker_GetSelected(swigCPtr, this);
    return (cPtr == 0) ? null : new ObjArray(cPtr, false);
  }

  public Model GetNearest() 
	{
		jlong ptr = VixenLibJNI.Picker_GetNearest(swigCPtr, this);
		return (Model)  SharedObj.MakeObject(ptr, true);
	}


  public long GetOptions() {
    return VixenLibJNI.Picker_GetOptions(swigCPtr, this);
  }

  public long GetButtons() {
    return VixenLibJNI.Picker_GetButtons(swigCPtr, this);
  }

  public Appearance GetHilite() 
	{
		jlong ptr = VixenLibJNI.Picker_GetHilite(swigCPtr, this);
		return (Appearance)  SharedObj.MakeObject(ptr, true);
	}


  public void SetOptions(int opts) {
    VixenLibJNI.Picker_SetOptions(swigCPtr, this, opts);
  }

  public void SetButtons(int mbutton) {
    VixenLibJNI.Picker_SetButtons(swigCPtr, this, mbutton);
  }

  public void SetHilite(Appearance hilite) {
    VixenLibJNI.Picker_SetHilite(swigCPtr, this, Appearance.getCPtr(hilite), hilite);
  }

  public void UnHiliteAll(boolean didpick) {
    VixenLibJNI.Picker_UnHiliteAll__SWIG_0(swigCPtr, this, didpick);
  }

  public void UnHiliteAll() {
    VixenLibJNI.Picker_UnHiliteAll__SWIG_1(swigCPtr, this);
  }

  public boolean Copy(SharedObj src) {
    return VixenLibJNI.Picker_Copy(swigCPtr, this, SharedObj.getCPtr(src), src);
  }

  public void setDoHilite(boolean value) {
    VixenLibJNI.Picker_DoHilite_set(swigCPtr, this, value);
  }

  public boolean getDoHilite() {
    return VixenLibJNI.Picker_DoHilite_get(swigCPtr, this);
  }

  public void setDoPick(boolean value) {
    VixenLibJNI.Picker_DoPick_set(swigCPtr, this, value);
  }

  public boolean getDoPick() {
    return VixenLibJNI.Picker_DoPick_get(swigCPtr, this);
  }

  public final static int BOUNDS = VixenLibJNI.Picker_BOUNDS_get();
  public final static int MESH = VixenLibJNI.Picker_MESH_get();
  public final static int PICK_MODEL = VixenLibJNI.Picker_PICK_MODEL_get();
  public final static int SELECT_PARENT = VixenLibJNI.Picker_SELECT_PARENT_get();
  public final static int HILITE_SELECTED = VixenLibJNI.Picker_HILITE_SELECTED_get();
  public final static int HILITE_PICKED = VixenLibJNI.Picker_HILITE_PICKED_get();
  public final static int NAME_FILTER = VixenLibJNI.Picker_NAME_FILTER_get();
  public final static int MULTI_SELECT = VixenLibJNI.Picker_MULTI_SELECT_get();
  public final static int CHECK_PARENT_BOUND = VixenLibJNI.Picker_CHECK_PARENT_BOUND_get();

}
