/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package Vixen;

public class Vec3 {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  public Vec3(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  public static long getCPtr(Vec3 obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        VixenLibJNI.delete_Vec3(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setX(float value) {
    VixenLibJNI.Vec3_x_set(swigCPtr, this, value);
  }

  public float getX() {
    return VixenLibJNI.Vec3_x_get(swigCPtr, this);
  }

  public void setY(float value) {
    VixenLibJNI.Vec3_y_set(swigCPtr, this, value);
  }

  public float getY() {
    return VixenLibJNI.Vec3_y_get(swigCPtr, this);
  }

  public void setZ(float value) {
    VixenLibJNI.Vec3_z_set(swigCPtr, this, value);
  }

  public float getZ() {
    return VixenLibJNI.Vec3_z_get(swigCPtr, this);
  }

  public Vec3() {
    this(VixenLibJNI.new_Vec3__SWIG_0(), true);
  }

  public Vec3(float x, float y, float z) {
    this(VixenLibJNI.new_Vec3__SWIG_1(x, y, z), true);
  }

  public Vec3(SWIGTYPE_p_float floatArray) {
    this(VixenLibJNI.new_Vec3__SWIG_2(SWIGTYPE_p_float.getCPtr(floatArray)), true);
  }

  public Vec3(Vec3 arg0) {
    this(VixenLibJNI.new_Vec3__SWIG_3(Vec3.getCPtr(arg0), arg0), true);
  }

  public void Set(float x, float y, float z) {
    VixenLibJNI.Vec3_Set(swigCPtr, this, x, y, z);
  }

  public boolean Equals(Vec3 arg0) {
    return VixenLibJNI.Vec3_Equals(swigCPtr, this, Vec3.getCPtr(arg0), arg0);
  }

  public Vec3 Sub(Vec3 arg0) {
    return new Vec3(VixenLibJNI.Vec3_Sub(swigCPtr, this, Vec3.getCPtr(arg0), arg0), true);
  }

  public Vec3 Add(Vec3 arg0) {
    return new Vec3(VixenLibJNI.Vec3_Add(swigCPtr, this, Vec3.getCPtr(arg0), arg0), true);
  }

  public Vec3 Mul(float arg0) {
    return new Vec3(VixenLibJNI.Vec3_Mul__SWIG_0(swigCPtr, this, arg0), true);
  }

  public Vec3 Mul(Vec3 arg0) {
    return new Vec3(VixenLibJNI.Vec3_Mul__SWIG_1(swigCPtr, this, Vec3.getCPtr(arg0), arg0), true);
  }

  public Vec3 Div(float arg0) {
    return new Vec3(VixenLibJNI.Vec3_Div(swigCPtr, this, arg0), true);
  }

  public boolean IsEmpty() {
    return VixenLibJNI.Vec3_IsEmpty(swigCPtr, this);
  }

  public Vec3 Cross(Vec3 arg0) {
    return new Vec3(VixenLibJNI.Vec3_Cross(swigCPtr, this, Vec3.getCPtr(arg0), arg0), true);
  }

  public Vec3 Negate() {
    return new Vec3(VixenLibJNI.Vec3_Negate(swigCPtr, this), false);
  }

  public float Length() {
    return VixenLibJNI.Vec3_Length(swigCPtr, this);
  }

  public float LengthSquared() {
    return VixenLibJNI.Vec3_LengthSquared(swigCPtr, this);
  }

  public float Normalize() {
    return VixenLibJNI.Vec3_Normalize(swigCPtr, this);
  }

  public float Dot(Vec3 arg0) {
    return VixenLibJNI.Vec3_Dot__SWIG_0(swigCPtr, this, Vec3.getCPtr(arg0), arg0);
  }

  public float Dot(SWIGTYPE_p_float floatArray) {
    return VixenLibJNI.Vec3_Dot__SWIG_1(swigCPtr, this, SWIGTYPE_p_float.getCPtr(floatArray));
  }

  public float Distance(Vec3 arg0) {
    return VixenLibJNI.Vec3_Distance(swigCPtr, this, Vec3.getCPtr(arg0), arg0);
  }

  public float DistanceSquared(Vec3 v) {
    return VixenLibJNI.Vec3_DistanceSquared(swigCPtr, this, Vec3.getCPtr(v), v);
  }

  public void Transform(Matrix arg0, Vec3 arg1) {
    VixenLibJNI.Vec3_Transform(swigCPtr, this, Matrix.getCPtr(arg0), arg0, Vec3.getCPtr(arg1), arg1);
  }

  public void TransformVector(Matrix arg0, Vec3 arg1) {
    VixenLibJNI.Vec3_TransformVector(swigCPtr, this, Matrix.getCPtr(arg0), arg0, Vec3.getCPtr(arg1), arg1);
  }

}
