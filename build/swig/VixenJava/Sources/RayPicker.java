/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package Vixen;

public class RayPicker extends Picker {
  private long swigCPtr;

  public RayPicker(long cPtr, boolean cMemoryOwn) {
    super(VixenLibJNI.RayPicker_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  public static long getCPtr(RayPicker obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        VixenLibJNI.delete_RayPicker(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public RayPicker() {
    this(VixenLibJNI.new_RayPicker(), true);
  }

  public void SetPickShape(Model mod) {
    VixenLibJNI.RayPicker_SetPickShape(swigCPtr, this, Model.getCPtr(mod), mod);
  }

  public Model GetPickShape() 
	{
		jlong ptr = VixenLibJNI.RayPicker_GetPickShape(swigCPtr, this);
		return (Model)  SharedObj.MakeObject(ptr, true);
	}


  public void SetRay(Ray r) {
    VixenLibJNI.RayPicker_SetRay(swigCPtr, this, Ray.getCPtr(r), r);
  }

  public Ray GetRay() {
    return new Ray(VixenLibJNI.RayPicker_GetRay(swigCPtr, this), false);
  }

  public boolean Copy(SharedObj src) {
    return VixenLibJNI.RayPicker_Copy(swigCPtr, this, SharedObj.getCPtr(src), src);
  }

}
