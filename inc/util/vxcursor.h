#pragma once

namespace Vixen {
/*!
 * @class Cursor3D
 * @brief Moves a 3D shape to follow the mouse pointer, putting a 3D cursor in the scene.
 *
 * The virtual cursor shows the pointer position by moving a 3D cursor shape within the scene.
 * It observes mouse events to determine how to reposition the shape. These events can
 * be generated by joysticks, game controllers or remote applications. The virtual cursor is useful
 * when the primary display and the 3D display are not the same.
 *
 * @par Example
 * Here is an example of how to add a virtual cursor to a 3D application
 * derived from the scene manager viewer:
 *
 * @code
 *	Shape *cursorshape = CreateCursor(0.01f);
 *	Viewer* viewer = (Viewer*) World3D::Get();
 *	Cursor3D *cursorengine = new Cursor3D();
 *	viewer->AddModel(cursorshape);
 *	viewer->AddEngine(cursorengine);
 * @endcode
 *
 * @see Engine Shape Viewer
 *
 * @author Ben Discoe
 */ 
class Cursor3D : public Engine
{
	VX_DECLARE_CLASS(Cursor3D);
public:
	Cursor3D();
	static	Model*	CreateCursor(float fSize);
	virtual bool		OnEvent(Event*);
	virtual bool		Eval(float t);

protected:
	static	Appearance*	MakeRGBAppearance(float r, float g, float b);
	bool					UpdateTarget();

protected:
	Vec2	m_CursorPos;
};

} // end Vixen